(function(o,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(o=typeof globalThis<"u"?globalThis:o||self,l(o.socaity={}))})(this,function(o){"use strict";var P=Object.defineProperty;var U=(o,l,s)=>l in o?P(o,l,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[l]=s;var a=(o,l,s)=>U(o,typeof l!="symbol"?l+"":l,s);class l{constructor(e){a(this,"config");a(this,"controller");this.config=e,this.controller=new AbortController}async sendRequest(e,t="POST",r={},c,n){const f=`${this.config.baseUrl}/${e}`,m=c||this.config.apiKey;if(!m)throw new Error("API key not provided");const p={method:t,headers:{Authorization:`Bearer ${m}`},signal:this.controller.signal};if(n){const i=new FormData;Object.entries(r).forEach(([d,h])=>{typeof h=="object"?i.append(d,JSON.stringify(h)):i.append(d,String(h))}),i.append("file",n),p.body=i}else if(Object.keys(r).length>0)if(t==="GET"){const i=new URLSearchParams;Object.entries(r).forEach(([h,b])=>{typeof b=="object"?i.append(h,JSON.stringify(b)):i.append(h,String(b))});const d=i.toString();d&&(e=`${e}?${d}`)}else p.headers["Content-Type"]="application/json",p.body=JSON.stringify(r);try{const i=await fetch(f,p);if(!i.ok){const d=await i.text();throw new Error(`API error (${i.status}): ${d}`)}return await i.json()}catch(i){throw i instanceof Error?i:new Error(`Network error: ${String(i)}`)}}async get(e,t={},r){return this.sendRequest(e,"GET",t,r)}async post(e,t={},r,c){return this.sendRequest(e,"POST",t,r,c)}abort(){this.controller.abort(),this.controller=new AbortController}}var s=(u=>(u.CREATED="CREATED",u.QUEUED="QUEUED",u.PROCESSING="PROCESSING",u.COMPLETED="COMPLETED",u.FAILED="FAILED",u))(s||{});class w{canParse(e){return e?!!(e.id||e.jobId||e.id&&(e.status||e.state)||e.id&&e.status&&e.urls):!1}parse(e){return{id:e.id||e.jobId||"",status:this.parseStatus(e),progress:this.parseProgress(e),result:e.result||e.output||null,error:e.error||null,message:e.message||"",createdAt:new Date,updatedAt:new Date}}parseStatus(e){const t=(e.status||"").toUpperCase();if(t==="COMPLETED"||t==="SUCCEEDED")return s.COMPLETED;if(t==="FAILED"||t==="ERROR")return s.FAILED;if(t==="IN_PROGRESS"||t==="PROCESSING"||t==="RUNNING")return s.PROCESSING;if(t==="QUEUED"||t==="PENDING")return s.QUEUED;if(e.state){const r=e.state.toUpperCase();if(r==="COMPLETED")return s.COMPLETED;if(r==="FAILED")return s.FAILED;if(r==="IN_PROGRESS")return s.PROCESSING;if(r==="QUEUED")return s.QUEUED}return s.CREATED}parseProgress(e){return typeof e.progress=="number"?e.progress:e.status==="COMPLETED"||e.status==="SUCCEEDED"?1:0}}class R{processResponse(e){if(!e)return null;if(typeof e=="string"&&e.startsWith("data:image"))return this.processImage(e);if(e instanceof ArrayBuffer||e instanceof Blob)return this.processBinaryData(e);if(typeof e=="object"&&e!==null){if(e.image_base64||e.imageBase64)return this.processImage(e.image_base64||e.imageBase64);if(e.image_url||e.imageUrl)return{url:e.image_url||e.imageUrl,...e}}return e}processImage(e){if(typeof document<"u"){const t=new Image;return t.src=e,{data:e,element:t,appendTo:r=>(r.appendChild(t),t)}}return{data:e}}processBinaryData(e){return typeof Blob<"u"&&e instanceof Blob?{data:e,toURL:()=>URL.createObjectURL(e),toBase64:async()=>new Promise(t=>{const r=new FileReader;r.onloadend=()=>t(r.result),r.readAsDataURL(e)})}:{data:e}}}class D{constructor(e,t){a(this,"requestHandler");a(this,"config");a(this,"jobs");a(this,"responseParser");a(this,"mediaHandler");this.requestHandler=e,this.config=t,this.jobs=new Map,this.responseParser=new w,this.mediaHandler=new R}async submitJob(e,t,r,c){try{const n=await this.requestHandler.post(e,t,r,c);if(!this.responseParser.canParse(n))throw new Error("Unexpected response format from API");const f=this.responseParser.parse(n);return this.jobs.set(f.id,f),f}catch(n){throw n instanceof Error?n:new Error(`Failed to submit job: ${String(n)}`)}}getAllJobs(){return Array.from(this.jobs.values())}getJob(e){return this.jobs.get(e)}async trackJobToCompletion(e){for(;;){await new Promise(r=>setTimeout(r,this.config.pollInterval));const t=await this.requestHandler.get(`status/${e.id}`);if(t.status===s.COMPLETED)return this.mediaHandler.processResponse(t.result);if(t.status===s.FAILED)throw new Error(`Job failed: ${t.error}`)}}async cancelJob(e){try{return await this.requestHandler.post(`cancel/${e}`,{}),this.jobs.delete(e),!0}catch{return!1}}clearCompletedJobs(){for(const[e,t]of this.jobs.entries())(t.status===s.COMPLETED||t.status===s.FAILED)&&this.jobs.delete(e)}}class E{constructor(e={}){a(this,"apiKey");a(this,"baseUrl");a(this,"pollInterval");a(this,"maxRetries");this.apiKey=e.apiKey,this.baseUrl=e.baseUrl||"https://api.socaity.ai/v1",this.pollInterval=e.pollInterval||1e3,this.maxRetries=e.maxRetries||3}update(e){e.apiKey!==void 0&&(this.apiKey=e.apiKey),e.baseUrl!==void 0&&(this.baseUrl=e.baseUrl),e.pollInterval!==void 0&&(this.pollInterval=e.pollInterval),e.maxRetries!==void 0&&(this.maxRetries=e.maxRetries)}clone(){return new E({apiKey:this.apiKey,baseUrl:this.baseUrl,pollInterval:this.pollInterval,maxRetries:this.maxRetries})}}class y{constructor(){a(this,"requestHandler");a(this,"jobManager");a(this,"config");this.config=new E,this.requestHandler=new l(this.config),this.jobManager=new D(this.requestHandler,this.config)}setApiKey(e){this.config.apiKey=e}setBaseUrl(e){this.config.baseUrl=e}async text2img(e,t={}){const r="text2img",c={prompt:e};return this.executeRequest(r,c,t)}async chat(e,t={}){const r="chat",c={messages:e,model:t.model||"default",temperature:t.temperature||.7};return this.executeRequest(r,c,t)}async uploadFile(e,t={}){return this.validateApiKey(t.apiKey),this.executeRequest("upload",{},t,e)}getJobs(){return this.jobManager.getAllJobs()}getJob(e){return this.jobManager.getJob(e)}async cancelJob(e){return this.jobManager.cancelJob(e)}async executeRequest(e,t,r={},c){const n=r.apiKey||this.config.apiKey;this.validateApiKey(n);const f=await this.jobManager.submitJob(e,t,n,c);return this.jobManager.trackJobToCompletion(f)}validateApiKey(e){if(!e&&!this.config.apiKey)throw new Error("API key not set. Use setApiKey() method or provide an apiKey in the options.")}}const g=new y;typeof window<"u"&&(window.socaity=g),o.SocaitySDK=y,o.socaity=g,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=socaity.umd.js.map
